#!/usr/bin/env python
import inkex
from lxml import etree
from fablab_lib import BaseEffect, print_
from fablab_box_lib import BoxEffect, BoxGenrationError


class BoxGeneratorEffect(BaseEffect, BoxEffect):

    def __init__(self):
        """
        Constructor.
        Defines the "--what" option of a script.
        """
        # Call the base class constructor.
        BaseEffect.__init__(self)

        self.arg_parser.add_argument('-i', '--path_id',
                                     type=str, dest='path_id', default='box',
                                     help='Id of svg path')

        self.arg_parser.add_argument('--width',
                                     type=float, dest='width', default=200,
                                     help='Width')
        self.arg_parser.add_argument('--depth',
                                     type=float, dest='depth', default=100,
                                     help='Depth')
        self.arg_parser.add_argument('--height',
                                     type=float, dest='height', default=50,
                                     help='Height')
        self.arg_parser.add_argument('--thickness',
                                     type=float, dest='thickness', default=3,
                                     help='Thickness of material')
        self.arg_parser.add_argument('--tab_size',
                                     type=float, dest='tab_size', default=10,
                                     help='Tab size')
        self.arg_parser.add_argument('--backlash',
                                     type=float, dest='backlash', default=0.1,
                                     help='Backlash generated by lasercut')
        self.arg_parser.add_argument('--closed',
                                     type=inkex.Boolean, 
                                     dest='closed', help='Closed box',
                                     default=False)

        self.start_stop = {}

    def effect(self):
        print_(self.options)

        parent = self.svg.get_current_layer()
        centre = self.svg.namedview.center
        print_("-- %s -- %s --" % (centre[0], centre[1]))

        fgcolor = "#FF0000"
        bgcolor = None
        try:
            if(self.options.closed):
                for shape in self.box_with_top(
                    self.options.path_id,
                    centre[0],
                    centre[1],
                    bgcolor,
                    fgcolor,
                    self.options.width,
                    self.options.depth,
                    self.options.height,
                    self.options.tab_size,
                    self.options.thickness,
                    self.options.backlash
                ):
                    etree.SubElement(
                        parent, inkex.addNS('path', 'svg'), shape
                    )
            else:
                for shape in self.box_without_top(
                    self.options.path_id,
                    centre[0],
                    centre[1],
                    bgcolor,
                    fgcolor,
                    self.options.width,
                    self.options.depth,
                    self.options.height,
                    self.options.tab_size,
                    self.options.thickness,
                    self.options.backlash
                ):
                    etree.SubElement(
                        parent, inkex.addNS('path', 'svg'), shape
                    )
        except BoxGenrationError as e:
            inkex.errormsg(e.value)


if __name__ == '__main__':
    effect = BoxGeneratorEffect()
    effect.run()
