#!/usr/bin/env python
from lxml import etree

import inkex

from fablab_box_lib import BoxEffect
from fablab_lib import BaseEffect
from fablab_lib import print_


class BoxGeneratorEffect(BaseEffect, BoxEffect):

    def __init__(self):
        """
        Constructor.
        Defines the "--what" option of a script.
        """
        # Call the base class constructor.
        BaseEffect.__init__(self)

        self.arg_parser.add_argument('-i', '--path_id',
                                     type=str, dest='path_id',
                                     default='encoches',
                                     help='Id of svg path')

        self.arg_parser.add_argument('--width',
                                     type=float, dest='width', default=200,
                                     help='Width')

        self.arg_parser.add_argument('--thickness',
                                     type=float, dest='thickness', default=3,
                                     help='Thickness of material')
        self.arg_parser.add_argument('--tab_size', action='store',
                                     type=float, dest='tab_size', default=10,
                                     help='Tab size')
        self.arg_parser.add_argument('--backlash',
                                     type=float, dest='backlash', default=0.0,
                                     help='Backlash generated by lasercut')

        self.start_stop = {}

    def effect(self):
        print_(self.options)

        parent = self.svg.get_current_layer()
        centre = self.svg.namedview.center

        tabs = self.tabs(
            self.options.width,
            self.options.tab_size,
            self.options.thickness,
            backlash=self.options.backlash * -1,
            lastUp=True
        )
        shape = self.getPath(
            self.toPathString(self.mm2u(tabs)),
            '%s_bottom' % self.options.path_id,
            centre[0],
            centre[1],
            None,
            '#FF0000'
        )
        etree.SubElement(
            parent,
            inkex.addNS('path', 'svg'),
            shape
        )

        tabs = [[0, 0]]
        tabs.extend(
            self.tabs(
                self.options.width,
                self.options.tab_size,
                self.options.thickness,
                backlash=self.options.backlash
            )
        )
        shape = self.getPath(
            self.toPathString(self.mm2u(tabs)),
            '%s_bottom' % self.options.path_id,
            centre[0],
            centre[1] + 2 * self.mm2u(self.options.thickness),
            None,
            '#00FF00'
        )
        etree.SubElement(parent, inkex.addNS('path', 'svg'), shape)


if __name__ == '__main__':
    effect = BoxGeneratorEffect()
    effect.run()
